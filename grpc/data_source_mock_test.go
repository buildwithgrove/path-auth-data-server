// Code generated by MockGen. DO NOT EDIT.
// Source: ./grpc/data_source.go
//
// Generated by this command:
//
//	mockgen -source=./grpc/data_source.go -destination=./grpc/data_source_mock_test.go -package=grpc
//

// Package grpc is a generated GoMock package.
package grpc

import (
	reflect "reflect"

	proto "github.com/buildwithgrove/path/envoy/auth_server/proto"
	gomock "go.uber.org/mock/gomock"
)

// MockAuthDataSource is a mock of AuthDataSource interface.
type MockAuthDataSource struct {
	ctrl     *gomock.Controller
	recorder *MockAuthDataSourceMockRecorder
	isgomock struct{}
}

// MockAuthDataSourceMockRecorder is the mock recorder for MockAuthDataSource.
type MockAuthDataSourceMockRecorder struct {
	mock *MockAuthDataSource
}

// NewMockAuthDataSource creates a new mock instance.
func NewMockAuthDataSource(ctrl *gomock.Controller) *MockAuthDataSource {
	mock := &MockAuthDataSource{ctrl: ctrl}
	mock.recorder = &MockAuthDataSourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthDataSource) EXPECT() *MockAuthDataSourceMockRecorder {
	return m.recorder
}

// AuthDataUpdatesChan mocks base method.
func (m *MockAuthDataSource) AuthDataUpdatesChan() (<-chan *proto.AuthDataUpdate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthDataUpdatesChan")
	ret0, _ := ret[0].(<-chan *proto.AuthDataUpdate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthDataUpdatesChan indicates an expected call of AuthDataUpdatesChan.
func (mr *MockAuthDataSourceMockRecorder) AuthDataUpdatesChan() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthDataUpdatesChan", reflect.TypeOf((*MockAuthDataSource)(nil).AuthDataUpdatesChan))
}

// FetchAuthDataSync mocks base method.
func (m *MockAuthDataSource) FetchAuthDataSync() (*proto.AuthDataResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchAuthDataSync")
	ret0, _ := ret[0].(*proto.AuthDataResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchAuthDataSync indicates an expected call of FetchAuthDataSync.
func (mr *MockAuthDataSourceMockRecorder) FetchAuthDataSync() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchAuthDataSync", reflect.TypeOf((*MockAuthDataSource)(nil).FetchAuthDataSync))
}
